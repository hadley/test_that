% Generated by roxygen2 (4.0.2): do not edit by hand
\name{test_package_coverage}
\alias{test_check_coverage}
\alias{test_package_coverage}
\title{Run all tests in an installed package to report test code coverage}
\usage{
test_package_coverage(package, reporter = "silent", split = FALSE,
  filter = NULL)

test_check_coverage(package, reporter = "silent", split = FALSE,
  filter = NULL)
}
\arguments{
\item{package}{package name}

\item{reporter}{reporter to use}

\item{filter}{If not \code{NULL}, only tests with file names matching this
regular expression will be executed.  Matching will take on the file
name after it has been stripped of \code{"test-"} and \code{".r"}.}
}
\value{
a data frame of the summary of test results
}
\description{
Run \code{test_package} silently, just looking for function calls, then
determine what proportion of functions in the tested package were tested. Not
as good as tested every code branch, but light-weight to implement, and runs
reasonably quickly.
}
\details{
\code{coverage} may be better suited to inclusion in devtools. It guesses that the current working directory is the name of the package (very commonly true in package development), and uses that name to run the tests installed in that envir
}
\examples{
\dontrun{test_package_cover("testthat")}
}

